{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const INCREMENT = 'increment';\nexport const INCREASMENT = \"increase\";\nexport const DECREMENT = \"decrement\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === INCREASMENT) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["D:/projects/redux/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","INCREMENT","INCREASMENT","DECREMENT","initialState","counter","showCounter","name","reducers","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,UAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAN,WAAW,CAAC;AACVO,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA;AAHU,CAAD,CAAX;;AAMA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgBX,SAApB,EAA+B;AAC7B,WAAO;AACLI,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIK,MAAM,CAACC,IAAP,KAAgBV,WAApB,EAAiC;AAC/B,WAAO;AACLG,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACE,MAD3B;AAELP,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIK,MAAM,CAACC,IAAP,KAAgBT,SAApB,EAA+B;AAC7B,WAAO;AACLE,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIK,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLN,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADf;AAELD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFV,KAAP;AAID;;AAED,SAAOK,KAAP;AACD,CA9BD;;AAgCA,MAAMI,KAAK,GAAGf,WAAW,CAACU,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const INCREMENT = 'increment';\nexport const INCREASMENT = \"increase\";\nexport const DECREMENT = \"decrement\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers\n})\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === INCREASMENT) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    }\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}